!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADD_CMD	settings/settings.h	/^	ADD_CMD   = 3,$/;"	e	enum:CPU_CMDS
AF	flags/flags.h	20;"	d
AF	labels/flags/flags.h	20;"	d
ASSEMBLER_H_INCLUDED	assembler/assembler.h	3;"	d
BIN	CPU/Makefile	/^BIN  = ..\/bin\/CPU$/;"	m
BIN	assembler/Makefile	/^BIN  = ..\/bin\/assembler$/;"	m
BIN_ASM	Makefile	/^BIN_ASM = .\/bin\/assembler$/;"	m
BIN_CPU	Makefile	/^BIN_CPU = .\/bin\/CPU$/;"	m
BIN_DIR	Makefile	/^export BIN_DIR  = ..\/bin$/;"	m
CF	flags/flags.h	18;"	d
CF	labels/flags/flags.h	18;"	d
CLEAR_FLAG	flags/flags.h	35;"	d
CLEAR_FLAG	labels/flags/flags.h	35;"	d
CMP_CMD	settings/settings.h	/^	CMP_CMD   = 16,$/;"	e	enum:CPU_CMDS
CPU	CPU/CPU.cpp	/^CPU::CPU(const char* file_path, const char* obj_source) :$/;"	f	class:CPU
CPU	CPU/CPU.cpp	/^CPU::CPU(void) : $/;"	f	class:CPU
CPU	CPU/CPU.h	/^class CPU {$/;"	c
CPU_CMDS	settings/settings.h	/^enum CPU_CMDS {$/;"	g
CPU_H_INCLUDED	CPU/CPU.h	3;"	d
CPU_UNIQUE_NUMBER	settings/settings.h	/^static const long long int CPU_UNIQUE_NUMBER = 0x75E7348131; $/;"	v
CXX	Makefile	/^export CXX      = g++ -std=c++14 $/;"	m
CXXFLAGS	Makefile	/^export CXXFLAGS = -MMD$/;"	m
DAR_	CPU/CPU.h	/^		double DAR_ = POISON_DOUBLE_CPU;$/;"	m	class:CPU
DEBUG_MODE	Makefile	/^DEBUG_MODE   = -g3 -O0 	$/;"	m
DEP	CPU/Makefile	/^DEP := $(OBJ:%.o=%.d)$/;"	m
DEP	assembler/Makefile	/^DEP := $(OBJ:%.o=%.d)$/;"	m
DEP_ALL	CPU/Makefile	/^DEP_ALL = $(DEP) $(OBJ_DIR)\/main_CPU.d$/;"	m
DEP_ALL	assembler/Makefile	/^DEP_ALL = $(DEP) $(OBJ_DIR)\/main_assembler.d$/;"	m
DIV_CMD	settings/settings.h	/^	DIV_CMD   = 6,$/;"	e	enum:CPU_CMDS
DR_	CPU/CPU.h	/^		double DR_  = POISON_DOUBLE_CPU;$/;"	m	class:CPU
E	Makefile	/^export E = $(Q)echo$/;"	m
EAX_	CPU/CPU.h	/^		double EAX_ = POISON_DOUBLE_CPU;$/;"	m	class:CPU
EAX_REG	settings/settings.h	/^	EAX_REG = 32,$/;"	e	enum:REGS_CMDS
EBP_	CPU/CPU.h	/^		char* EBP_ = nullptr;$/;"	m	class:CPU
EBX_	CPU/CPU.h	/^		double EBX_ = POISON_DOUBLE_CPU;$/;"	m	class:CPU
EBX_REG	settings/settings.h	/^	EBX_REG = 33,$/;"	e	enum:REGS_CMDS
ECX_	CPU/CPU.h	/^		double ECX_ = POISON_DOUBLE_CPU;$/;"	m	class:CPU
ECX_REG	settings/settings.h	/^	ECX_REG = 34,$/;"	e	enum:REGS_CMDS
EDX_	CPU/CPU.h	/^		double EDX_ = POISON_DOUBLE_CPU;$/;"	m	class:CPU
EDX_REG	settings/settings.h	/^	EDX_REG = 35,$/;"	e	enum:REGS_CMDS
END_CMD	settings/settings.h	/^	END_CMD   = 13,$/;"	e	enum:CPU_CMDS
EPSILON	settings/settings.h	/^static const double EPSILON = 1e-6;$/;"	v
ERROR	settings/settings.h	/^static const int ERROR        = 0;$/;"	v
ERRORS_H_INCLUDED	errors/errors.h	3;"	d
ESP_	CPU/CPU.h	/^		Stack ESP_;$/;"	m	class:CPU
FLAGS_	CPU/CPU.h	/^		char FLAGS_ = 0;$/;"	m	class:CPU
FLAGS_H_INCLUDED	flags/flags.h	3;"	d
FLAGS_H_INCLUDED	labels/flags/flags.h	3;"	d
FPRINTF_REG	errors/errors.h	13;"	d
FROM_JMP_CMD	labels/labels.h	/^	FROM_JMP_CMD    = 0,$/;"	e	enum:func_calls
FROM_MARK_LABEL	labels/labels.h	/^	FROM_MARK_LABEL = 1,$/;"	e	enum:func_calls
FRST_PASS	assembler/assembler.h	/^	FRST_PASS = 1,$/;"	e	enum:pass_of_asm
FSQRT_CMD	settings/settings.h	/^	FSQRT_CMD = 7,$/;"	e	enum:CPU_CMDS
HDR	CPU/Makefile	/^HDR := $(SRC:%.cpp=%.h)$/;"	m
HDR	assembler/Makefile	/^HDR := $(SRC:%.cpp=%.h)$/;"	m
HDR_ALL	CPU/Makefile	/^HDR_ALL = $(HDR) $(HEAD_DIR)\/stack.h $(HEAD_DIR)\/txtlib.h $/;"	m
HDR_ALL	assembler/Makefile	/^HDR_ALL = $(HDR) $(HEAD_DIR)\/txtlib.h $/;"	m
HDR_DIR	Makefile	/^export HDR_DIR  = $(HEAD_DIR) ..\/CPU ..\/assembler ..\/errors ..\/labels ..\/settings ..\/flags $/;"	m
HEAD_DIR	Makefile	/^export HEAD_DIR = ..\/..\/include\/headers$/;"	m
HLT_CMD	settings/settings.h	/^	HLT_CMD   = 10,$/;"	e	enum:CPU_CMDS
IF_STRCMP_JMP	assembler/assembler.h	35;"	d
IF_STRCMP_MRK	assembler/assembler.h	59;"	d
IF_STRCMP_ORD	assembler/assembler.h	28;"	d
IF_STRCMP_REG	assembler/assembler.h	72;"	d
IN_CMD	settings/settings.h	/^	IN_CMD    = 8,$/;"	e	enum:CPU_CMDS
IP_	CPU/CPU.h	/^		int   IP_  = START_IP;$/;"	m	class:CPU
IR_	CPU/CPU.h	/^		int    IR_  = POISON_INT_CPU;$/;"	m	class:CPU
JAE_CMD	settings/settings.h	/^	JAE_CMD   = 21,$/;"	e	enum:CPU_CMDS
JA_CMD	settings/settings.h	/^	JA_CMD    = 22,$/;"	e	enum:CPU_CMDS
JBE_CMD	settings/settings.h	/^	JBE_CMD   = 19,$/;"	e	enum:CPU_CMDS
JB_CMD	settings/settings.h	/^	JB_CMD    = 20,$/;"	e	enum:CPU_CMDS
JE_CMD	settings/settings.h	/^	JE_CMD    = 18,$/;"	e	enum:CPU_CMDS
JMP_CMD	settings/settings.h	/^	JMP_CMD   = 12,$/;"	e	enum:CPU_CMDS
JNE_CMD	settings/settings.h	/^	JNE_CMD   = 17,$/;"	e	enum:CPU_CMDS
LABELS_H_INCLUDED	labels/labels.h	3;"	d
LAUNCH_MODE	Makefile	/^LAUNCH_MODE = debug$/;"	m
LIB_ALL	CPU/Makefile	/^LIB_ALL = -lstack -ltxtlib$/;"	m
LIB_ALL	assembler/Makefile	/^LIB_ALL = -ltxtlib$/;"	m
LIB_DIR	Makefile	/^export LIB_DIR  = ..\/..\/include\/libs$/;"	m
Labels	labels/labels.cpp	/^Labels::Labels(void) $/;"	f	class:Labels
Labels	labels/labels.h	/^class Labels {$/;"	c
MARK_LABEL	labels/labels.h	/^static const char MARK_LABEL      = ':';$/;"	v
MODULES	Makefile	/^MODULES  = CPU assembler errors labels settings flags $/;"	m
MUL_CMD	settings/settings.h	/^	MUL_CMD   = 5,$/;"	e	enum:CPU_CMDS
NEXT_ELEMENT	settings/settings.h	/^static const int NEXT_ELEMENT = 1;$/;"	v
NOP_CMD	settings/settings.h	/^	NOP_CMD   = 11,$/;"	e	enum:CPU_CMDS
NUM_OF_FLAGS	flags/flags.h	/^static const int NUM_OF_FLAGS = 6;$/;"	v
NUM_OF_FLAGS	labels/flags/flags.h	/^static const int NUM_OF_FLAGS = 6;$/;"	v
OBJ	CPU/Makefile	/^OBJ  = $(addprefix $(OBJ_DIR)\/, $(notdir $(SRC)))$/;"	m
OBJ	CPU/Makefile	/^OBJ := $(OBJ:%.cpp=%.o)$/;"	m
OBJ	assembler/Makefile	/^OBJ  = $(addprefix $(OBJ_DIR)\/, $(notdir $(SRC)))$/;"	m
OBJ	assembler/Makefile	/^OBJ := $(OBJ:%.cpp=%.o)$/;"	m
OBJ_ALL	CPU/Makefile	/^OBJ_ALL = $(OBJ) $(OBJ_DIR)\/main_CPU.o$/;"	m
OBJ_ALL	assembler/Makefile	/^OBJ_ALL = $(OBJ) $(OBJ_DIR)\/main_assembler.o$/;"	m
OBJ_DIR	Makefile	/^export OBJ_DIR  = ..\/obj$/;"	m
OF	flags/flags.h	23;"	d
OF	labels/flags/flags.h	23;"	d
OUT_CMD	settings/settings.h	/^	OUT_CMD   = 2,$/;"	e	enum:CPU_CMDS
PF	flags/flags.h	19;"	d
PF	labels/flags/flags.h	19;"	d
POINTER_ON_	settings/settings.h	20;"	d
POISON_DOUBLE_CPU	settings/settings.h	/^static const double POISON_DOUBLE_CPU = NAN;$/;"	v
POISON_INT_CPU	settings/settings.h	/^static const int    POISON_INT_CPU    = 0x7F3428BE;$/;"	v
POISON_POSITION	labels/labels.h	/^static const int  POISON_POSITION = -1;$/;"	v
POPR_CMD	settings/settings.h	/^	POPR_CMD  = 15,$/;"	e	enum:CPU_CMDS
POP_CMD	settings/settings.h	/^	POP_CMD   = 9,$/;"	e	enum:CPU_CMDS
POP_TWO_VARIABLES	settings/settings.h	8;"	d
PROJECTS	Makefile	/^PROJECTS = CPU assembler$/;"	m
PUSHR_CMD	settings/settings.h	/^	PUSHR_CMD = 14,$/;"	e	enum:CPU_CMDS
PUSH_CMD	settings/settings.h	/^	PUSH_CMD  = 1,$/;"	e	enum:CPU_CMDS
PUSH_TWO_VARIABLES	settings/settings.h	14;"	d
Q	Makefile	/^export Q = @  $/;"	m
READING_DATA	assembler/assembler.h	80;"	d
RECREATE_DUMP_CPU_FILE	errors/errors.h	7;"	d
REGS_CMDS	settings/settings.h	/^enum REGS_CMDS {$/;"	g
RELEASE_MODE	Makefile	/^RELEASE_MODE = -g0 -Ofast$/;"	m
SCND_PASS	assembler/assembler.h	/^	SCND_PASS = 2,$/;"	e	enum:pass_of_asm
SETTINGS_H_INCLUDED	settings/settings.h	3;"	d
SET_FLAG	flags/flags.h	32;"	d
SET_FLAG	labels/flags/flags.h	32;"	d
SF	flags/flags.h	22;"	d
SF	labels/flags/flags.h	22;"	d
SRC	CPU/Makefile	/^SRC  = CPU.cpp ..\/errors\/errors.cpp \\$/;"	m
SRC	assembler/Makefile	/^SRC  = assembler.cpp ..\/labels\/labels.cpp \\$/;"	m
SRC_ALL	CPU/Makefile	/^SRC_ALL = $(SRC)            main_CPU.cpp$/;"	m
SRC_ALL	assembler/Makefile	/^SRC_ALL = $(SRC)            main_assembler.cpp$/;"	m
START_CAPACITY	settings/settings.h	/^static const int    START_CAPACITY    = 4;$/;"	v
START_IP	settings/settings.h	/^static const int START_IP = sizeof(long long int) + sizeof(int);$/;"	v
SUB_CMD	settings/settings.h	/^	SUB_CMD   = 4,$/;"	e	enum:CPU_CMDS
TXT_DIR	Makefile	/^export TXT_DIR  = ..\/txt$/;"	m
VALGRIND_FLAGS	Makefile	/^VALGRIND_FLAGS = --leak-check=full --show-leak-kinds=all -v$/;"	m
WARNINGS	Makefile	/^export WARNINGS = -Wall -Wextra $/;"	m
ZF	flags/flags.h	21;"	d
ZF	labels/flags/flags.h	21;"	d
add_CPU_info_in_buf	assembler/assembler.cpp	/^void add_CPU_info_in_buf(char* buffer_data, int num_of_bytes)$/;"	f
add_label	labels/labels.cpp	/^void Labels::add_label(char* name_of_label, int pos_to_jmp)$/;"	f	class:Labels
array_of_labels	labels/labels.h	/^		label_info_t* array_of_labels = nullptr;$/;"	m	class:Labels
assembling_file	assembler/assembler.cpp	/^void assembling_file(const char* file_path, const char* source)  $/;"	f
capacity	labels/labels.h	/^		size_t        capacity        = 0;$/;"	m	class:Labels
check_label	labels/labels.cpp	/^int Labels::check_label(char* name_of_label, int pos_to_jmp, int func_call)$/;"	f	class:Labels
concat	settings/settings.cpp	/^char* concat(const char* file_path, const char* tag, const char* source)$/;"	f
dump	errors/errors.cpp	/^void CPU::dump(void)$/;"	f	class:CPU
find_label	labels/labels.cpp	/^int Labels::find_label(char* name_of_label) $/;"	f	class:Labels
fopen_file_with_path	settings/settings.cpp	/^FILE* fopen_file_with_path(const char* file_path, const char* tag, const char* source, const char* mode)$/;"	f
func_calls	labels/labels.h	/^enum func_calls {$/;"	g
is_different	settings/settings.cpp	/^double is_different(double value_1, double value_2)$/;"	f
label_counter	labels/labels.h	/^		size_t        label_counter   = 0;$/;"	m	class:Labels
label_info_t	labels/labels.h	/^struct label_info_t {$/;"	s
labels_dump	labels/labels.cpp	/^void Labels::labels_dump(void)$/;"	f	class:Labels
main	CPU/main_CPU.cpp	/^int main() {$/;"	f
main	assembler/main_assembler.cpp	/^int main() {$/;"	f
main	unit_tests/main_tests.cpp	/^int main() {$/;"	f
name_of_label	labels/labels.h	/^	char* name_of_label = nullptr;$/;"	m	struct:label_info_t
parsing_label	labels/labels.cpp	/^void Labels::parsing_label(char* name_of_label, int func_call) $/;"	f	class:Labels
pass_of_asm	assembler/assembler.h	/^enum pass_of_asm {$/;"	g
pass_of_assembler	assembler/assembler.cpp	/^void pass_of_assembler(int pass_of_asm, text_t* file_info, Labels* table_labels, char** buffer_data)$/;"	f
pos_to_jmp	labels/labels.h	/^	int   pos_to_jmp    = POISON_POSITION;$/;"	m	struct:label_info_t
realloc_array_of_label	labels/labels.cpp	/^void Labels::realloc_array_of_label(void)$/;"	f	class:Labels
run	CPU/CPU.cpp	/^void CPU::run(void)$/;"	f	class:CPU
set_CF	flags/flags.cpp	/^void CPU::set_CF(void)$/;"	f	class:CPU
set_CF	labels/flags/flags.cpp	/^void CPU::set_CF(void)$/;"	f	class:CPU
set_ZF	flags/flags.cpp	/^void CPU::set_ZF(void)$/;"	f	class:CPU
set_ZF	labels/flags/flags.cpp	/^void CPU::set_ZF(void)$/;"	f	class:CPU
unit_test_1	unit_tests/unit_tests.cpp	/^void unit_test_1(const char* file_path, const char* source) {$/;"	f
unit_test_2	unit_tests/unit_tests.cpp	/^void unit_test_2(const char* file_path, const char* obj_source) {$/;"	f
~CPU	CPU/CPU.cpp	/^CPU::~CPU(void) $/;"	f	class:CPU
~Labels	labels/labels.cpp	/^Labels::~Labels(void)$/;"	f	class:Labels
